networks:
  traefik-net:
    driver: bridge

services:
  traefik:
    image: traefik:v3.1
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.network=traefik-net"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.filename=/etc/traefik/rr.yml"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
{% if enable_https %}
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email={{ email }}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
{% endif %}
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--core.defaultRuleSyntax=v3"
    ports:
      - "80:80"
{% if enable_https %}
      - "443:443"
{% endif %}
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik/rr.yml:/etc/traefik/rr.yml:ro"
{% if enable_https %}
      - "./letsencrypt:/letsencrypt"
{% endif %}
    networks: [traefik-net]
    restart: unless-stopped

{% for s in services %}
  {{ s.name }}:
    image: nghyane/copilot-api:latest
    environment:
      - GH_TOKEN={{ s.token }}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-net"
      - "traefik.http.services.{{ s.name }}.loadbalancer.server.port=4141"
      # Không có router riêng - sẽ dùng file config để load balance
    networks: [traefik-net]
    restart: unless-stopped

{% endfor %}
